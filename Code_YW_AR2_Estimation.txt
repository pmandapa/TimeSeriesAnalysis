Simulation of AR(2) process
xt=phi1*x(t-1)+phi2*x_(t-2)+z_t z_t~ N(0, sigma^2)

set seed a common number, so we can reproduce the same datasets
set.seed(2017)

model parameters (we will estimate them)
sigma=4
phi=NULL
phi[1:2]=c(1/3,1/2)
phi
0.333333333333333 0.5

number of data points
n=10000

simulate ar process
ar.process=arima.sim(n,model=list(ar=c(1/3,1/2)), sd=4)
ar.process[1:5]
4.08768466761998 5.5984917197062 3.01929493617705 2.44235386119014 5.39830218361194

find and name 2nd and 3rd sample autocorrelation
r=NULL
r[1:2]=acf(ar.process, plot=F)$acf[2:3]
r
0.681410288563695 0.725582481184244

matrix R
R=matrix(1,2,2) # matrix of dimension 2 by 2, with entries all 1's.
R
1	1
1	1

edit R
R[1,2]=r[1] # only diagonal entries are edited
R[2,1]=r[1] # only diagonal entries are edited
R
1.0000000	0.6814103
0.6814103	1.0000000

b-column vector on the right
b=matrix(r,nrow=2,ncol=1)# b- column vector with no entries
b
0.6814103
0.7255825

solve(R,b) solves Rx=b, and gives x=R^(-1)b vector
phi.hat=matrix(c(solve(R,b)[1,1], solve(R,b)[2,1]),2,1)
phi.hat
0.3490720
0.4877212

variance estimation
c0=acf(ar.process, type='covariance', plot=F)$acf[1]
var.hat=c0*(1-sum(phi.hat*r))
var.hat
16.3716899100558

plot time series, along with acf, pacf
par(mfrow=c(3,1))
plot(ar.process, main='Simulated AR(2)')
acf(ar.process, main='ACF')
pacf(ar.process, main='PACF')
